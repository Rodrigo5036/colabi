name: Compilar y liberar firmware OTA

on:
  push:
    paths:
      - 'src/src.ino'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Verificar existencia de src/src.ino
        id: check_file
        run: |
          if [ ! -f src/src.ino ]; then
            echo "src/src.ino no existe. Cancelando workflow como exitoso." && exit 0
          fi

      - name: Restaurar caché de dependencias
        uses: actions/cache@v3
        with:
          path: |
            ~/.arduino15
            ~/.arduino15/packages
            ~/.arduino15/staging
            ~/.arduino15/libraries
          key: esp32-core-${{ hashFiles('src/src.ino') }}

      - name: Configurar Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        with:
          version: latest

      - name: Configurar core ESP32 y librerías necesarias
        uses: arduino/setup-arduino-core@v1
        with:
          platform: esp32:esp32
          install-libraries: |
            ArduinoJson

      - name: Compilar código .ino
        run: |
          mkdir -p build
          arduino-cli compile --fqbn esp32:esp32:esp32 --output-dir build src/

      - name: Renombrar binario
        run: |
          mkdir -p release
          cp build/src.ino.bin release/firmware.bin

      - name: Subir binario a release fija
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v-latest
          name: Última versión para OTA
          files: release/firmware.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

          
