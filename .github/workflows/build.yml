name: Compilar y liberar firmware OTA

on:
  push:
    paths:
      - 'src/src.ino'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Verificar existencia de src/src.ino
        id: checkfile
        run: |
          if [ -f src/src.ino ]; then
            echo "✅ Archivo src/src.ino existe. Continuando..."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ Archivo src/src.ino NO existe. Finalizando sin ejecutar compilación."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Finalizar sin errores si el archivo fue eliminado
        if: steps.checkfile.outputs.exists == 'false'
        run: |
          echo "🚫 Nada que hacer. Terminando workflow exitosamente."
          exit 0

      - name: Restaurar caché de dependencias
        if: steps.checkfile.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.arduino15
            ~/.arduino15/packages
            ~/.arduino15/staging
            ~/.arduino15/libraries
          key: esp32-core-cache-v1
          restore-keys: |
            esp32-core-cache-


      - name: Instalar Arduino CLI manualmente
        if: steps.checkfile.outputs.exists == 'true'
        run: |
          curl -fsSL https://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Linux_64bit.tar.gz -o arduino-cli.tar.gz
          tar -xzf arduino-cli.tar.gz
          sudo mv arduino-cli /usr/local/bin/

      - name: Instalar ESP32 core y librerías necesarias
        if: steps.checkfile.outputs.exists == 'true'
        run: |
          arduino-cli config init --overwrite
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
          arduino-cli lib install "ArduinoJson"

      - name: Compilar código .ino
        if: steps.checkfile.outputs.exists == 'true'
        run: |
          mkdir -p build
          arduino-cli compile --fqbn esp32:esp32:esp32 --output-dir build src/

      - name: Renombrar binario
        if: steps.checkfile.outputs.exists == 'true'
        run: |
          mkdir -p release
          cp build/src.ino.bin release/firmware.bin

      - name: Subir binario a release fija
        if: steps.checkfile.outputs.exists == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v-latest
          name: Última versión para OTA
          files: release/firmware.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
